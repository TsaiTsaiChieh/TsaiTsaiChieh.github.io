<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Angular Quick Note</title>
    <link href="/2023/08/17/Angular%20Quick%20Note/"/>
    <url>/2023/08/17/Angular%20Quick%20Note/</url>
    
    <content type="html"><![CDATA[<h3 id="app-component"><a href="#app-component" class="headerlink" title="app.component"></a>app.component</h3><ol><li>HTML</li><li>CSS&#x2F;SCSS&#x2F;SASS&#x2F;LESS</li><li>SPEC for testing</li><li>Component for TS file</li></ol><h3 id="Understanding-Components"><a href="#Understanding-Components" class="headerlink" title="Understanding Components"></a>Understanding Components</h3><ul><li>Template: The template defines the structure and appearance of the component’s UI. It uses HTML along<br>with Angular-specific syntax to bind data, handle events, and render dynamic content.</li><li>Class: The class contains the component’s logic and data. It is written in TypeScript and includes properties,<br>methods, and lifecycle hooks.</li><li>Metadata: The metadata is defined using decorators. It provides Angular with information about the<br>component, such as its selector, template, styles, and dependencies.</li></ul><h3 id="Creating-and-using-Components"><a href="#Creating-and-using-Components" class="headerlink" title="Creating and using Components"></a>Creating and using Components</h3><ul><li>Use the Angular CLI to generate a new component<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ng generate component component-name<br></code></pre></td></tr></table></figure>shortcut<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ng g c component-name<br></code></pre></td></tr></table></figure></li></ul><h3 id="Component-Lifecycle"><a href="#Component-Lifecycle" class="headerlink" title="Component Lifecycle"></a>Component Lifecycle</h3><ol><li>Constructor - constructor is running</li><li>OnChanges - ngOnChanges() in first time</li><li>OnInit - ngOnInit() called after the component has been initialized. Initializing logic for example: fetch data from database, or from API. </li><li>OnChanges - ngOnChanges() will run when one or more components input properties have changed, so it receives an object containing the previous and the current value of the input properties. It always listen to any changes that will happen to any properties of the component(s).</li><li>OnDestroy - ngOnDestroy() is called before the component is destroyed. It’s used to clean up resource and subscribe from observable or perform any necessary cleanup tasks, like remove or reset the data when the component gets destroyed.</li></ol><h3 id="Understanding-Services"><a href="#Understanding-Services" class="headerlink" title="Understanding Services"></a>Understanding Services</h3><ul><li>In Angular, services are reusable and injectable classes that provide functionality and data to components throughout an application.</li><li>Services are responsible for handling tasks such as data retrieval from APIs, sharing data between components, and performing business logic.</li><li>Services are typically used to abstract away the implementation details of specific functionality, keeping the components lean and focused on their primary responsibilities. They help promote code reusability, modularity, and testability.</li></ul><h3 id="Creating-and-using-Services"><a href="#Creating-and-using-Services" class="headerlink" title="Creating and using Services"></a>Creating and using Services</h3><ul><li>Use the Angular CLI to generate a new component<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ng generate service service-name<br></code></pre></td></tr></table></figure>shortcut<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ng g s service-name<br></code></pre></td></tr></table></figure></li></ul><h3 id="Dependency-Injection"><a href="#Dependency-Injection" class="headerlink" title="Dependency Injection"></a>Dependency Injection</h3><ul><li>Modularity: Dependencies can be managed and resolved independently, allowing for easier code organization and separation of concerns.</li><li>Reusability: Services can be shared and reused across multiple components, reducing code duplication.</li><li>Testability: Dependencies can be easily mocked or replaced during testing, enabling effective unit testing.</li><li>Loose coupling: Components and services depend on abstractions (interfaces) rather than concrete implementations, resulting in loosely coupled code that is easier to maintain and modify.</li></ul><h3 id="Configuring-Routes"><a href="#Configuring-Routes" class="headerlink" title="Configuring Routes"></a>Configuring Routes</h3><ul><li>Angular’s routing module allows you to define and configure routes for different views or components in your application.</li><li>Routing enables navigation between different pages or sections of your application without requiring a full page reload.</li></ul><h3 id="Router-Outlet-Router-Links-and-Navigation"><a href="#Router-Outlet-Router-Links-and-Navigation" class="headerlink" title="Router Outlet, Router Links, and Navigation"></a>Router Outlet, Router Links, and Navigation</h3><ul><li>The <strong>router-outlet</strong> directive is a placeholder that renders the component associated with the active route.<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">router-outlet</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-outlet</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li>To navigate between routes, Angular provides the <strong>routerLink</strong> directive, which allows you to create links to different routes in your application.<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">routerLink</span>=<span class="hljs-string">&quot;/about&quot;</span>&gt;</span>About<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> [<span class="hljs-attr">routerlink</span>]=<span class="hljs-string">&quot;[&#x27;/user&#x27;, userid]&quot;</span>&gt;</span>User Profile<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li>To navigate programmatically in the component class, you can use the <strong>Router</strong> service provided by Angular’s router module.<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Import</span> &#123; <span class="hljs-title class_">Router</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/ router&#x27;</span>;<br><br>@<span class="hljs-title class_">Component</span> (&#123;...&#125;)<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyComponent</span> &#123;<br>  <span class="hljs-title function_">constructor</span> (private <span class="hljs-attr">router</span>: <span class="hljs-title class_">Router</span>) &#123;&#125;<br><br>  <span class="hljs-comment">// custom function name</span><br>  <span class="hljs-title function_">navigateToAbout</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">router</span>.<span class="hljs-title function_">navigate</span>([<span class="hljs-string">&#x27;/about&#x27;</span>])<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>angular</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ESLint Setting</title>
    <link href="/2023/08/13/ESLint-Setting/"/>
    <url>/2023/08/13/ESLint-Setting/</url>
    
    <content type="html"><![CDATA[<p>記錄一些自己常用的 ESLint 設定</p><p>version:<br><a href="mailto:&#101;&#115;&#x6c;&#105;&#x6e;&#x74;&#x40;&#x38;&#46;&#x34;&#55;&#x2e;&#48;">&#101;&#115;&#x6c;&#105;&#x6e;&#x74;&#x40;&#x38;&#46;&#x34;&#55;&#x2e;&#48;</a><br><a href="mailto:&#101;&#115;&#x6c;&#105;&#x6e;&#116;&#45;&#99;&#x6f;&#x6e;&#x66;&#x69;&#103;&#45;&#110;&#x65;&#120;&#x74;&#64;&#x31;&#x33;&#x2e;&#52;&#x2e;&#x31;&#51;">&#101;&#115;&#x6c;&#105;&#x6e;&#116;&#45;&#99;&#x6f;&#x6e;&#x66;&#x69;&#103;&#45;&#110;&#x65;&#120;&#x74;&#64;&#x31;&#x33;&#x2e;&#52;&#x2e;&#x31;&#51;</a></p><h2 id="Extends"><a href="#Extends" class="headerlink" title="Extends"></a>Extends</h2><h3 id="next-core-web-vitals"><a href="#next-core-web-vitals" class="headerlink" title="next&#x2F;core-web-vitals"></a>next&#x2F;core-web-vitals</h3><p>為 init next 的 default 配置</p><p>More info: <a href="https://nextjs.org/docs/app/building-your-application/configuring/eslint#core-web-vitals">Core Web Vitals</a></p><h2 id="Rules"><a href="#Rules" class="headerlink" title="Rules"></a>Rules</h2><h3 id="semi"><a href="#semi" class="headerlink" title="semi"></a><a href="https://eslint.org/docs/latest/rules/semi#rule-details">semi</a></h3><p>Require or disallow semicolons instead of ASI (automatic semicolon insertion)</p><p>取消每段 statement 末尾的分號</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs JSON"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;semi&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;error&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;never&quot;</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="member-delimiter-style"><a href="#member-delimiter-style" class="headerlink" title="member-delimiter-style"></a><a href="https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/member-delimiter-style.md">member-delimiter-style</a></h3><p>Require a specific member delimiter style for interfaces and type literals<br>取消 interface&#x2F;type 末尾的分號</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs JSON"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;@typescript-eslint/member-delimiter-style&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-string">&quot;error&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;multiline&quot;</span><span class="hljs-punctuation">:</span> <br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;delimiter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;none&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;requireLast&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br>      <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;singleline&quot;</span><span class="hljs-punctuation">:</span> <br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;delimiter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;none&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;requireLast&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="quotes"><a href="#quotes" class="headerlink" title="quotes"></a><a href="https://eslint.org/docs/latest/rules/quotes#rule-details">quotes</a></h3><p>Enforce the consistent use of either backticks, double, or single quotes</p><p>使用單引號</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs JSON"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;quotes&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;error&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;single&quot;</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="object-curly-spacing"><a href="#object-curly-spacing" class="headerlink" title="object-curly-spacing"></a><a href="https://eslint.org/docs/latest/rules/object-curly-spacing#rule-details">object-curly-spacing</a></h3><p>Enforce consistent spacing inside braces</p><p>大括號內的間距一致，包和物件中的物件和陣列</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs JSON"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;object-curly-spacing&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>      <span class="hljs-string">&quot;error&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&quot;always&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;arraysInObjects&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;objectsInObjects&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="block-spacing"><a href="#block-spacing" class="headerlink" title="block-spacing"></a><a href="https://eslint.org/docs/latest/rules/block-spacing#rule-details">block-spacing</a></h3><p>Disallow or enforce spaces inside of blocks after opening block and before closing block</p><p>大括號後需要空格</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs JSON"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;block-spacing&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;error&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;always&quot;</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="Plugins"><a href="#Plugins" class="headerlink" title="Plugins"></a>Plugins</h2><h3 id="eslint-plugin-simple-import-sort"><a href="#eslint-plugin-simple-import-sort" class="headerlink" title="eslint-plugin-simple-import-sort"></a><a href="https://www.npmjs.com/package/eslint-plugin-simple-import-sort">eslint-plugin-simple-import-sort</a></h3><p>Easy autofixable import sorting</p><p>Add “simple-import-sort” to “plugins”</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs JSON"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;plugins&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;simple-import-sort&quot;</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>Then add the rules for sorting imports and exports:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs JSON"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;rules&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;simple-import-sort/imports&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;error&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;simple-import-sort/exports&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;error&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>code style</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/08/13/hello-world/"/>
    <url>/2023/08/13/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
